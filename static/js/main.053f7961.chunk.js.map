{"version":3,"sources":["components/Accordion/Accordion.css","App.css","components/Background/Background.css","components/MoveFolders/MoveFolders.css","components/MoveFolders/MoveFolders.jsx","components/Accordion/Accordion.jsx","components/Background/Background.jsx","App.js","index.js"],"names":["module","exports","Accordion","App","Background","MoveFolders","state","idOutFolder","idInFolder","isLoading","toRepeatValue","handleChangeInput","e","target","id","_this","setState","value","handleChangeSelect","console","log","handleClick","script","run","withSuccessHandler","moveFoldersAndFiles","setTriggerAtHours","react_default","a","createElement","TextField","style","width","label","placeholder","type","margin","onChange","this","href","fontSize","Chip","icon","Icon","onClick","color","size","FormControl","marginTop","InputLabel","htmlFor","Select","MenuItem","Button","variant","React","Component","props","_React$useState","useState","_React$useState2","Object","slicedToArray","expanded","setExpanded","handleChange","panel","event","isExpanded","className","classes","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","Typography","class","ExpansionPanelDetails","components_MoveFolders_MoveFolders","heading","List","component","root","aria-label","ListItem","button","ListItemText","primary","Divider","divider","viewBox","xmlns","fill-rule","clip-rule","stroke-linejoin","stroke-miterlimit","d","light","handleClik","showAndHideLoader","bool","components_Background_Background","LinearProgress","components_Accordion_Accordion","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.053f7961.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Accordion\":\"Accordion__Accordion__2vsT6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__1o-Fp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"Background__Background__3D_mw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MoveFolders\":\"MoveFolders__MoveFolders__26UAr\"};","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Icon from '@material-ui/core/Icon';\nimport classes from './MoveFolders.css';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\nimport FaceIcon from '@material-ui/icons/Face';\n\nclass MoveFolders extends React.Component {\n  state = {\n    idOutFolder: null,\n    idInFolder: null,\n    isLoading: false,\n    toRepeatValue: 0\n  };\n  handleChangeInput = e => {\n    if (e.target.id === 'idOutFolder') {\n      this.setState({ idOutFolder: e.target.value });\n    }\n    if (e.target.id === 'idInFolder') {\n      this.setState({ idInFolder: e.target.value });\n    }\n  };\n  handleChangeSelect = e => {\n    console.log(e.target);\n    this.setState({ toRepeatValue: e.target.value });\n  };\n  handleClick = e => {\n    this.setState({ isLoading: true });\n    google.script.run\n      .withSuccessHandler(() => {\n        this.setState({ isLoading: false });\n      })\n      .moveFoldersAndFiles(this.state.idOutFolder, this.state.idInFolder);\n    google.script.run.setTriggerAtHours(this.state.toRepeatValue);\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <div>\n            <TextField\n              style={{ width: '100%' }}\n              id=\"idOutFolder\"\n              label=\"Из папки\"\n              placeholder=\"Укажите URL папки\"\n              type=\"search\"\n              margin=\"normal\"\n              onChange={this.handleChangeInput}\n            />\n            {this.state.idOutFolder ? (\n              <a\n                href={\n                  'https://drive.google.com/drive/folders/' +\n                  this.state.idInFolder\n                }\n                style={{ fontSize: '0.7rem' }}\n              >\n                <Chip\n                  icon={<Icon style={{ fontSize: '1rem' }}>folder_open</Icon>}\n                  label={this.state.idOutFolder}\n                  onClick=\"{handleClick}\"\n                  color=\"primary\"\n                  size=\"small\"\n                />\n              </a>\n            ) : null}\n          </div>\n          <div>\n            <TextField\n              style={{ width: '100%' }}\n              id=\"idInFolder\"\n              label=\"В папку\"\n              placeholder=\"Укажите URL папки\"\n              type=\"search\"\n              margin=\"normal\"\n              icon={<Icon>add_circle</Icon>}\n              onChange={this.handleChangeInput}\n            />\n            {this.state.idInFolder ? (\n              <a\n                href={\n                  'https://drive.google.com/drive/folders/' +\n                  this.state.idInFolder\n                }\n                style={{ fontSize: '0.7rem' }}\n              >\n                <Chip\n                  icon={<Icon style={{ fontSize: '1rem' }}>folder_open</Icon>}\n                  label={this.state.idInFolder}\n                  onClick=\"{handleClick}\"\n                  color=\"primary\"\n                  size=\"small\"\n                />\n              </a>\n            ) : null}\n          </div>\n        </div>\n        <div>\n          <FormControl style={{ width: '100%', marginTop: '18px' }}>\n            <InputLabel htmlFor=\"age-simple\">Повторять</InputLabel>\n            <Select\n              value={this.state.toRepeatValue}\n              onChange={this.handleChangeSelect}\n            >\n              <MenuItem value={0}>\n                <em>Нет</em>\n              </MenuItem>\n              <MenuItem value={1}>Каждый час</MenuItem>\n              <MenuItem value={2}>Раз в 3 часа</MenuItem>\n              <MenuItem value={6}>Раз в 6 часа</MenuItem>\n              <MenuItem value={12}>Раз в 12 часа</MenuItem>\n              <MenuItem value={24}>Каждый день</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            style={{ margin: '60px 5px' }}\n            onClick={this.handleClick}\n          >\n            Переместить\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"small\"\n            // style={{ margin: '60px 5px' }}\n            onClick={this.handleClick}\n          >\n            Очистить\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MoveFolders;\n","import React, { Component } from 'react';\nimport classes from './Accordion.css';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoveFolders from '../MoveFolders/MoveFolders';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nconst Accordion = props => {\n  const [expanded, setExpanded] = React.useState(false);\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const showAndHideLoader = bool => {\n    props.showAndHideLoader(bool);\n  };\n  // googlescripts\n  const importFiles = () => {\n    showAndHideLoader(true);\n    'google'.script.run\n      .withSuccessHandler(() => {\n        showAndHideLoader(false);\n      })\n      .importLinks();\n  };\n  return (\n    <div className={classes.Accordion}>\n      <ExpansionPanel\n        expanded={expanded === 'panel1'}\n        onChange={handleChange('panel1')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography>\n            <i class=\"material-icons\">folder</i>\n            Перенос директорий\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <MoveFolders />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel\n        expanded={expanded === 'panel2'}\n        onChange={handleChange('panel2')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n        >\n          <Typography className={classes.heading}>\n            <i class=\"material-icons\">file_copy</i> Импорт файлов\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <List\n            component=\"nav\"\n            className={classes.root}\n            aria-label=\"Mailbox folders\"\n          >\n            <ListItem button>\n              <i class=\"material-icons\">link</i>\n              <ListItemText primary=\"Импорт ссылок\" />\n            </ListItem>\n            <Divider />\n            <ListItem button divider>\n              <i class=\"material-icons\">insert_drive_file</i>\n              <ListItemText primary=\"Файл импорта\" />\n            </ListItem>\n            <ListItem button>\n              <svg\n                viewBox=\"0 0 16 16\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                stroke-linejoin=\"round\"\n                stroke-miterlimit=\"1.414\"\n              >\n                <path d=\"M12.52 8.435c-1.922 0-3.48 1.558-3.48 3.48s1.558 3.48 3.48 3.48S16 13.836 16 11.914s-1.558-3.48-3.48-3.48zm-9.04 0C1.558 8.435 0 9.993 0 11.915s1.558 3.48 3.48 3.48 3.48-1.558 3.48-3.48-1.558-3.48-3.48-3.48zm8-4.35c0 1.922-1.558 3.48-3.48 3.48s-3.48-1.558-3.48-3.48c0-1.92 1.558-3.48 3.48-3.48s3.48 1.56 3.48 3.48z\" />\n                <script xmlns=\"\" />\n              </svg>\n              <ListItemText primary=\"Асана\" />\n            </ListItem>\n            <Divider light />\n            <ListItem button>\n              <i class=\"material-icons\">clear</i>\n              <ListItemText primary=\"Очистить таблицу\" />\n            </ListItem>\n          </List>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n};\n\nexport default Accordion;\n","import React from 'react';\nimport classes from './Background.css';\nconst Background = props => {\n  return <div className={classes.Background} />;\n};\nexport default Background;\n","import React from 'react';\nimport classes from './App.css';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Accordion from './components/Accordion/Accordion';\nimport Background from './components/Background/Background';\nclass App extends React.Component {\n  state = {\n    isLoading: false\n  };\n  handleClik = () => {\n    this.setState({ isLoading: !this.state.isLoading });\n  };\n  showAndHideLoader = bool => {\n    this.setState({ isLoading: bool });\n  };\n  render() {\n    return (\n      <div className={classes.App}>\n        {this.state.isLoading ? <Background /> : null}\n\n        {this.state.isLoading ? <LinearProgress /> : null}\n        <h3 onClick={this.handleClik}>Google Apps</h3>\n        <Accordion showAndHideLoader={this.showAndHideLoader} />\n        <div />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
