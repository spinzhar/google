{"version":3,"sources":["App.css","components/Accordion/Accordion.css","components/Background/Background.css","components/Background/Background.jsx","components/MoveFolders/MoveFolders.jsx","components/Accordion/Accordion.jsx","App.js","index.js"],"names":["module","exports","App","Accordion","Background","props","react_default","a","createElement","className","classes","MoveFolders","state","idOutFolder","idOutFolderName","idInFolder","idInFolderName","isLoading","toRepeatValue","handleChangeInput","e","target","id","value","_this","setState","search","split","script","run","withSuccessHandler","folderName","getFolderNameById","handleChangeSelect","handleClickYes","moveFoldersAndFiles","setTriggerAtHours","handleClickNo","clearAll","_this2","this","data","console","log","getData","components_Background_Background","LinearProgress","TextField","style","width","label","placeholder","type","margin","defaultValue","onChange","href","rel","fontSize","Chip","icon","Icon","onClick","color","size","FormControl","marginTop","InputLabel","htmlFor","Select","MenuItem","Button","variant","React","Component","panel","_React$useState","useState","_React$useState2","Object","slicedToArray","expanded","setExpanded","ExpansionPanel","event","isExpanded","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","Typography","ExpansionPanelDetails","components_MoveFolders_MoveFolders","handleClik","showAndHideLoader","bool","components_Accordion_Accordion","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.23a2e474.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__1o-Fp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Accordion\":\"Accordion__Accordion__2vsT6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"Background__Background__3D_mw\"};","import React from 'react';\nimport classes from './Background.css';\nconst Background = props => {\n  return <div className={classes.Background} />;\n};\nexport default Background;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Icon from '@material-ui/core/Icon';\nimport Chip from '@material-ui/core/Chip';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Background from '../Background/Background';\n\nclass MoveFolders extends React.Component {\n  state = {\n    idOutFolder: null,\n    idOutFolderName: null,\n    idInFolder: null,\n    idInFolderName: null,\n    isLoading: false,\n    toRepeatValue: 0\n  };\n  handleChangeInput = e => {\n    if (e.target.id === 'idOutFolder') {\n      let value = e.target.value;\n      this.setState({ idOutFolder: value });\n      let re = /drive\\/folders/g;\n      if (value.search(re) !== -1) {\n        value = value.split('drive/folders/')[1];\n      }\n      'google'.script.run.withSuccessHandler(folderName => {\n        this.setState({ idOutFolderName: folderName });\n      });\n    }\n    if (e.target.id === 'idInFolder') {\n      let value = e.target.value;\n      this.setState({ idInFolder: value });\n      let re = /drive\\/folders/g;\n      if (value.search(re) !== -1) {\n        value = value.split('drive/folders/')[1];\n      }\n      'google'.script.run\n        .withSuccessHandler(folderName => {\n          this.setState({ idInFolderName: folderName });\n        })\n        .getFolderNameById(value);\n    }\n  };\n  handleChangeSelect = e => {\n    this.setState({ toRepeatValue: e.target.value });\n  };\n  handleClickYes = e => {\n    this.setState({ isLoading: true });\n    'google'.script.run\n      .withSuccessHandler(() => {\n        this.setState({ isLoading: false });\n      })\n      .moveFoldersAndFiles(this.state.idOutFolder, this.state.idInFolder);\n    'google'.script.run.setTriggerAtHours(this.state.toRepeatValue);\n  };\n  handleClickNo = e => {\n    this.setState({ isLoading: true });\n    'google'.script.run\n      .withSuccessHandler(() => {\n        this.setState({ isLoading: false });\n      })\n      .clearAll();\n  };\n  componentDidMount() {\n    'google'.script.run\n      .withSuccessHandler(data => {\n        console.log(data);\n        const {\n          idOutFolder,\n          idOutFolderName,\n          idInFolder,\n          idInFolderName,\n          toRepeatValue\n        } = data;\n        this.setState({ idOutFolder });\n        this.setState({ idOutFolderName });\n        this.setState({ idInFolder });\n        this.setState({ idInFolderName });\n        this.setState({ toRepeatValue });\n        this.setState({ isLoading: false });\n      })\n      .getData();\n  }\n  render() {\n    return (\n      <div>\n        {this.state.isLoading ? <Background /> : null}\n        {this.state.isLoading ? <LinearProgress /> : null}\n        <div>\n          <div>\n            <TextField\n              style={{ width: '100%' }}\n              id=\"idOutFolder\"\n              label=\"Из папки\"\n              placeholder=\"Укажите URL папки\"\n              type=\"search\"\n              margin=\"normal\"\n              defaultValue={this.setState.idOutFolder}\n              onChange={this.handleChangeInput}\n            />\n            {this.state.idOutFolderName ? (\n              <a\n                href={\n                  'https://drive.google.com/drive/folders/' +\n                  this.state.idOutFolder\n                }\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ fontSize: '0.7rem' }}\n              >\n                <Chip\n                  icon={<Icon style={{ fontSize: '1rem' }}>folder_open</Icon>}\n                  label={this.state.idOutFolderName}\n                  onClick=\"{handleClick}\"\n                  color=\"primary\"\n                  size=\"small\"\n                />\n              </a>\n            ) : null}\n          </div>\n          <div>\n            <TextField\n              style={{ width: '100%' }}\n              id=\"idInFolder\"\n              label=\"В папку\"\n              placeholder=\"Укажите URL папки\"\n              type=\"search\"\n              margin=\"normal\"\n              icon={<Icon>add_circle</Icon>}\n              onChange={this.handleChangeInput}\n              defaultValue={this.setState.idInFolder}\n            />\n            {this.state.idInFolderName ? (\n              <a\n                href={\n                  'https://drive.google.com/drive/folders/' +\n                  this.state.idInFolder\n                }\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ fontSize: '0.7rem' }}\n              >\n                <Chip\n                  icon={<Icon style={{ fontSize: '1rem' }}>folder_open</Icon>}\n                  label={this.state.idInFolderName}\n                  onClick=\"{handleClick}\"\n                  color=\"primary\"\n                  size=\"small\"\n                />\n              </a>\n            ) : null}\n          </div>\n        </div>\n        <div>\n          <FormControl style={{ width: '100%', marginTop: '18px' }}>\n            <InputLabel htmlFor=\"age-simple\">Повторять</InputLabel>\n            <Select\n              value={this.state.toRepeatValue}\n              onChange={this.handleChangeSelect}\n            >\n              <MenuItem value={0}>\n                <em>Нет</em>\n              </MenuItem>\n              <MenuItem value={1}>Каждый час</MenuItem>\n              <MenuItem value={2}>Раз в 3 часа</MenuItem>\n              <MenuItem value={6}>Раз в 6 часа</MenuItem>\n              <MenuItem value={12}>Раз в 12 часа</MenuItem>\n              <MenuItem value={24}>Каждый день</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            style={{ margin: '60px 5px' }}\n            onClick={this.handleClickYes}\n          >\n            Переместить\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={this.handleClickNo}\n          >\n            Очистить\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MoveFolders;\n","import React from 'react';\nimport classes from './Accordion.css';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoveFolders from '../MoveFolders/MoveFolders';\n\nconst Accordion = props => {\n  const [expanded, setExpanded] = React.useState(false);\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n  return (\n    <div className={classes.Accordion}>\n      <ExpansionPanel\n        expanded={expanded === 'panel1'}\n        onChange={handleChange('panel1')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography>\n            <i className=\"material-icons\">folder</i>\n            Перенос директорий\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <MoveFolders />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n};\n\nexport default Accordion;\n","import React from 'react';\nimport classes from './App.css';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Accordion from './components/Accordion/Accordion';\nimport Background from './components/Background/Background';\nclass App extends React.Component {\n  state = {\n    isLoading: false\n  };\n  handleClik = () => {\n    this.setState({ isLoading: !this.state.isLoading });\n  };\n  showAndHideLoader = bool => {\n    this.setState({ isLoading: bool });\n  };\n  render() {\n    return (\n      <div className={classes.App}>\n        {this.state.isLoading ? <Background /> : null}\n        {this.state.isLoading ? <LinearProgress /> : null}\n        <h3 onClick={this.handleClik}>Google Apps</h3>\n        <Accordion showAndHideLoader={this.showAndHideLoader} />\n        <div />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}