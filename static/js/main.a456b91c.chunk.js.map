{
  "version": 3,
  "sources": [
    "App.css",
    "components/Accordion/Accordion.css",
    "components/Background/Background.css",
    "components/Background/Background.jsx",
    "components/MoveFolders/MoveFolders.jsx",
    "components/Accordion/Accordion.jsx",
    "App.js",
    "index.js"
  ],
  "names": [
    "module",
    "exports",
    "App",
    "Accordion",
    "Background",
    "props",
    "react_default",
    "a",
    "createElement",
    "className",
    "classes",
    "MoveFolders",
    "state",
    "idOutFolder",
    "idOutFolderName",
    "idInFolder",
    "idInFolderName",
    "isLoading",
    "toRepeatValue",
    "handleChangeInput",
    "e",
    "target",
    "id",
    "_this",
    "setState",
    "value",
    "handleChangeSelect",
    "handleClickYes",
    "script",
    "run",
    "withSuccessHandler",
    "moveFoldersAndFiles",
    "setTriggerAtHours",
    "handleClickNo",
    "deleteAllTrigger",
    "_this2",
    "this",
    "timer",
    "setInterval",
    "data",
    "console",
    "log",
    "getData",
    "clearInterval",
    "components_Background_Background",
    "LinearProgress",
    "TextField",
    "style",
    "width",
    "label",
    "placeholder",
    "type",
    "margin",
    "onChange",
    "href",
    "fontSize",
    "Chip",
    "icon",
    "Icon",
    "onClick",
    "color",
    "size",
    "FormControl",
    "marginTop",
    "InputLabel",
    "htmlFor",
    "Select",
    "MenuItem",
    "Button",
    "variant",
    "React",
    "Component",
    "panel",
    "_React$useState",
    "useState",
    "_React$useState2",
    "Object",
    "slicedToArray",
    "expanded",
    "setExpanded",
    "ExpansionPanel",
    "event",
    "isExpanded",
    "ExpansionPanelSummary",
    "expandIcon",
    "ExpandMore_default",
    "aria-controls",
    "Typography",
    "class",
    "ExpansionPanelDetails",
    "components_MoveFolders_MoveFolders",
    "handleClik",
    "showAndHideLoader",
    "bool",
    "components_Accordion_Accordion",
    "ReactDOM",
    "render",
    "src_App_0",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.a456b91c.chunk.js",
  "sourcesContent": [
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__1o-Fp\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"Accordion\":\"Accordion__Accordion__2vsT6\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"Background__Background__3D_mw\"};",
    "import React from 'react';\nimport classes from './Background.css';\nconst Background = props => {\n  return <div className={classes.Background} />;\n};\nexport default Background;\n",
    "import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Icon from '@material-ui/core/Icon';\nimport Chip from '@material-ui/core/Chip';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Background from '../Background/Background';\nclass MoveFolders extends React.Component {\n  state = {\n    idOutFolder: null,\n    idOutFolderName: null,\n    idInFolder: null,\n    idInFolderName: null,\n    isLoading: true,\n    toRepeatValue: 0\n  };\n  handleChangeInput = e => {\n    if (e.target.id === 'idOutFolder') {\n      this.setState({ idOutFolder: e.target.value });\n    }\n    if (e.target.id === 'idInFolder') {\n      this.setState({ idInFolder: e.target.value });\n    }\n  };\n  handleChangeSelect = e => {\n    this.setState({ toRepeatValue: e.target.value });\n  };\n  handleClickYes = e => {\n    this.setState({ isLoading: true });\n    google.script.run\n      .withSuccessHandler(() => {\n        this.setState({ isLoading: false });\n      })\n      .moveFoldersAndFiles(this.state.idOutFolder, this.state.idInFolder);\n    google.script.run.setTriggerAtHours(this.state.toRepeatValue);\n  };\n  handleClickNo = e => {\n    this.setState({ isLoading: true });\n    google.script.run\n      .withSuccessHandler(() => {\n        this.setState({ isLoading: false });\n        this.setState({ toRepeatValue: 0 });\n      })\n      .deleteAllTrigger();\n    google.script.run.setTriggerAtHours(this.state.toRepeatValue);\n  };\n  componentDidMount() {\n    this.timer = setInterval(\n      () =>\n        google.script.run\n          .withSuccessHandler(data => {\n            console.log(data);\n            const {\n              idOutFolder,\n              idOutFolderName,\n              idInFolder,\n              idInFolderName,\n              toRepeatValue\n            } = data;\n            this.setState({ idOutFolder });\n            this.setState({ idOutFolderName });\n            this.setState({ idInFolder });\n            this.setState({ idInFolderName });\n            this.setState({ toRepeatValue });\n            this.setState({ isLoading: false });\n          })\n          .getData(),\n      10000\n    );\n  }\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n  render() {\n    return (\n      <div>\n        {this.state.isLoading ? <Background /> : null}\n        {this.state.isLoading ? <LinearProgress /> : null}\n        <div>\n          <div>\n            <TextField\n              style={{ width: '100%' }}\n              id=\"idOutFolder\"\n              label=\"Из папки\"\n              placeholder=\"Укажите URL папки\"\n              type=\"search\"\n              margin=\"normal\"\n              onChange={this.handleChangeInput}\n            />\n            {this.state.idOutFolderName ? (\n              <a\n                href={\n                  'https://drive.google.com/drive/folders/' +\n                  this.state.idOutFolder\n                }\n                style={{ fontSize: '0.7rem' }}\n              >\n                <Chip\n                  icon={<Icon style={{ fontSize: '1rem' }}>folder_open</Icon>}\n                  label={this.state.idOutFolderName}\n                  onClick=\"{handleClick}\"\n                  color=\"primary\"\n                  size=\"small\"\n                />\n              </a>\n            ) : null}\n          </div>\n          <div>\n            <TextField\n              style={{ width: '100%' }}\n              id=\"idInFolder\"\n              label=\"В папку\"\n              placeholder=\"Укажите URL папки\"\n              type=\"search\"\n              margin=\"normal\"\n              icon={<Icon>add_circle</Icon>}\n              onChange={this.handleChangeInput}\n            />\n            {this.state.idInFolderName ? (\n              <a\n                href={\n                  'https://drive.google.com/drive/folders/' +\n                  this.state.idInFolder\n                }\n                style={{ fontSize: '0.7rem' }}\n              >\n                <Chip\n                  icon={<Icon style={{ fontSize: '1rem' }}>folder_open</Icon>}\n                  label={this.state.idInFolderName}\n                  onClick=\"{handleClick}\"\n                  color=\"primary\"\n                  size=\"small\"\n                />\n              </a>\n            ) : null}\n          </div>\n        </div>\n        <div>\n          <FormControl style={{ width: '100%', marginTop: '18px' }}>\n            <InputLabel htmlFor=\"age-simple\">Повторять</InputLabel>\n            <Select\n              value={this.state.toRepeatValue}\n              onChange={this.handleChangeSelect}\n            >\n              <MenuItem value={0}>\n                <em>Нет</em>\n              </MenuItem>\n              <MenuItem value={1}>Каждый час</MenuItem>\n              <MenuItem value={2}>Раз в 3 часа</MenuItem>\n              <MenuItem value={6}>Раз в 6 часа</MenuItem>\n              <MenuItem value={12}>Раз в 12 часа</MenuItem>\n              <MenuItem value={24}>Каждый день</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            style={{ margin: '60px 5px' }}\n            onClick={this.handleClickYes}\n          >\n            Переместить\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={this.handleClickNo}\n          >\n            Очистить\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MoveFolders;\n\ntry {\n} catch (error) {}\n",
    "import React from 'react';\nimport classes from './Accordion.css';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoveFolders from '../MoveFolders/MoveFolders';\n\nconst Accordion = props => {\n  const [expanded, setExpanded] = React.useState(false);\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n  return (\n    <div className={classes.Accordion}>\n      <ExpansionPanel\n        expanded={expanded === 'panel1'}\n        onChange={handleChange('panel1')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography>\n            <i class=\"material-icons\">folder</i>\n            Перенос директорий\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <MoveFolders />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n};\n\nexport default Accordion;\n",
    "import React from 'react';\nimport classes from './App.css';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Accordion from './components/Accordion/Accordion';\nimport Background from './components/Background/Background';\nclass App extends React.Component {\n  state = {\n    isLoading: false\n  };\n  handleClik = () => {\n    this.setState({ isLoading: !this.state.isLoading });\n  };\n  showAndHideLoader = bool => {\n    this.setState({ isLoading: bool });\n  };\n  render() {\n    return (\n      <div className={classes.App}>\n        {this.state.isLoading ? <Background /> : null}\n\n        {this.state.isLoading ? <LinearProgress /> : null}\n        <h3 onClick={this.handleClik}>Google Apps</h3>\n        <Accordion showAndHideLoader={this.showAndHideLoader} />\n        <div />\n      </div>\n    );\n  }\n}\n\nexport default App;\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"
  ],
  "sourceRoot": ""
}
